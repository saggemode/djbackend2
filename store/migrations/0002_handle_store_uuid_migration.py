# Generated by Django 5.2.1 on 2025-06-20 00:48

import uuid
from django.db import migrations, models

def generate_store_uuids(apps, schema_editor):
    """Generate UUIDs for all existing store model records"""
    CustomerLifetimeValue = apps.get_model('store', 'CustomerLifetimeValue')
    Store = apps.get_model('store', 'Store')
    StoreAnalytics = apps.get_model('store', 'StoreAnalytics')
    StoreStaff = apps.get_model('store', 'StoreStaff')

    for model_class in [CustomerLifetimeValue, Store, StoreAnalytics, StoreStaff]:
        for obj in model_class.objects.all():
            obj.new_id = uuid.uuid4()
            obj.save(update_fields=['new_id'])


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0001_initial'),
    ]

    operations = [
        # Step 1: Add new UUID fields
        migrations.AddField(model_name='customerlifetimevalue', name='new_id', field=models.UUIDField(default=uuid.uuid4, null=True, blank=True)),
        migrations.AddField(model_name='store', name='new_id', field=models.UUIDField(default=uuid.uuid4, null=True, blank=True)),
        migrations.AddField(model_name='storeanalytics', name='new_id', field=models.UUIDField(default=uuid.uuid4, null=True, blank=True)),
        migrations.AddField(model_name='storestaff', name='new_id', field=models.UUIDField(default=uuid.uuid4, null=True, blank=True)),

        # Step 2: Populate new UUIDs
        migrations.RunPython(generate_store_uuids, reverse_code=migrations.RunPython.noop),

        # Step 3: Remove old primary keys
        migrations.RemoveField(model_name='customerlifetimevalue', name='id'),
        migrations.RemoveField(model_name='store', name='id'),
        migrations.RemoveField(model_name='storeanalytics', name='id'),
        migrations.RemoveField(model_name='storestaff', name='id'),

        # Step 4: Rename new_id to id
        migrations.RenameField(model_name='customerlifetimevalue', old_name='new_id', new_name='id'),
        migrations.RenameField(model_name='store', old_name='new_id', new_name='id'),
        migrations.RenameField(model_name='storeanalytics', old_name='new_id', new_name='id'),
        migrations.RenameField(model_name='storestaff', old_name='new_id', new_name='id'),

        # Step 5: Alter fields to be primary keys
        migrations.AlterField(model_name='customerlifetimevalue', name='id', field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
        migrations.AlterField(model_name='store', name='id', field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
        migrations.AlterField(model_name='storeanalytics', name='id', field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
        migrations.AlterField(model_name='storestaff', name='id', field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
    ] 